/* PREFIX 
    How to: @include prefix(transform, rotate(45deg), webkit ms);
*/
@mixin prefix($property, $value, $prefixes: ()) {
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: $value;
    }
    // Output standard non-prefixed declaration
    #{$property}: $value;
}

/* CENTER VERTICALLY
    How to: @include center(both);
    Allowed: vertical, horizontal, both
    Defaul: vertical
*/
@mixin center($position: 'vertical') {
    position: absolute;

    @if $position == 'vertical' {
        top: 50%;
        @include prefix(transform,translateY(-50%), webkit ms);
    }
    @else if $position == 'horizontal' {
        left: 50%;
        @include prefix(transform,translateX(-50%), webkit ms);
    }
    @else if $position == 'both' {
        left: 50%;
        top: 50%;
        @include prefix(transform,translate(-50%, -50%), webkit ms);
    }
}
/* MEDIA QUERIES
    How to: @include breapoint(xs) {};
    Allowed: xs, sm, md, lg
*/
@mixin breakpoint($class) {
    @if $class == xs {
      @media (max-width: 767px) { @content; }
    }
   
    @else if $class == sm {
      @media (min-width: 768px) { @content; }
    }
   
    @else if $class == md {
      @media (min-width: 992px) { @content; }
    }
   
    @else if $class == lg {
      @media (min-width: 1200px) { @content; }
    }
   
    @else {
      @warn "Breakpoint mixin supports: xs, sm, md, lg";
    }
  }

/* ANIMATION
    How to: @include keyframe(animation, 3s);
    Allowed: string parameter
*/
@mixin animate-prefixer($property, $value...) {
    -webkit-#{$property}: unquote('#{$value}');
    #{$property}: unquote('#{$value}');
}

/* KEYFRAME
    How to: @include animate-keyframe('animation-name') {};
    Allowed: string parameter
*/
@mixin animate-keyframe($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }

    @keyframes #{$animation-name} {
        @content;
    }
}